#!/usr/bin/env python
import rospy
import cv2 as cv
from std_msgs.msg import String
from sensor_msgs.msg import Image
from cv_bridge import CvBridge, CvBridgeError
import numpy as np
import os

class image_converter:

  def __init__(self, img):
    self.image_pub = rospy.Publisher("camera_pc", Image, queue_size=1000)
    self.bridge = CvBridge()
    self.img = img

  def callback(self):
    try:
      self.image_pub.publish(self.bridge.cv2_to_imgmsg(self.img, "bgr8"))
    except CvBridgeError as e:
      print(e)


if __name__ == '__main__':
  cap = cv.VideoCapture(0)
  if not cap.isOpened():
      rospy.logerr("Cannot open camera")
      exit()
  else:
    rospy.loginfo("Successfully opened camera")
  while True:
    ret, frame = cap.read()
    if not ret:
      rospy.loginfo("Can't receive frame (stream end?). Exiting ...")
      break
    cv.imshow("Stream",frame)
    cv.waitKey(1)
    ic = image_converter(frame)
    rospy.init_node('image_publisher')
    ic.callback()
