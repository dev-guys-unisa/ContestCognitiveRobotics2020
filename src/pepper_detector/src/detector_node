#!/usr/bin/env python3
import os
import rospy
from camera_acquisition.msg import ImageWithPose
from sensor_msgs.msg import Image
from vision_msgs.msg import Detection2D, Detection2DArray, ObjectHypothesisWithPose
from pepper_detector.msg import DetectionWithPose
from detector import Detector
import ros_numpy # pip3 install git+https://github.com/eric-wieser/ros_numpy

def rcv_image(msg):
    rospy.loginfo("Image received, running inference...")
    d_pose = DetectionWithPose()

    d_pose.pose = msg.pose

    image = ros_numpy.numpify(msg.image)
    detections = mydetector(image)
    message = Detection2DArray()
    for clabel,score,box in zip(detections['detection_classes'], detections['detection_scores'], detections['detection_boxes']):
        rospy.loginfo("Seen ",str(int(clabel)),":",str(int(score)))
        d = Detection2D()
        d.bbox.size_x = box[3]-box[1]
        d.bbox.size_y = box[2]-box[0]
        d.bbox.center.x = box[1]+d.bbox.size_x/2
        d.bbox.center.y = box[0]+d.bbox.size_y/2
        o = ObjectHypothesisWithPose()
        o.score = score
        o.id = clabel
        d.results.append(o)
        message.detections.append(d)
        
    d_pose.detections = message
    pub.publish(d_pose)
    rospy.loginfo("detection published")

    """
    se score > 50 -> clabel
    """

rospy.init_node('detector_node')
pub = rospy.Publisher('detection', DetectionWithPose, queue_size=2)
si = rospy.Subscriber("/image_capture", ImageWithPose, rcv_image, queue_size=5)

DET_PATH=os.path.join(os.path.dirname(__file__),'efficientdet_d1_coco17_tpu-32')
mydetector = Detector(DET_PATH)

try:
    rospy.spin()

except KeyboardInterrupt:
    print("Shutting down")
    