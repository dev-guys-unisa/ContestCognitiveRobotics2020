#!/usr/bin/env python
# -------------------------------------------------------------------
# *
# * This module has been developed by Group 18 @ Cognitive Robotics DIEM.UNISA.
# *
# * Title:    head_shake
# * Author:   Fina, Puzo, Russomanno, Ventre
# * Org.:     UNISA - DIEM - Artificial Intelligence - Cognitive Robotics - Group 18
# * Date:     23 Nov, 2020
# *
# * This file implements a ROS node to generate the movement of the robot joints
# * related to the head. In particular this node sets the angles and the speed to
# * make possible the head's movements of Pepper.
# * There is a setup phase that allow to set up the central position of the head
# * with the body in order to avoid wrong movements. This phase is performed before
# * the movements which lead the images acquisition.
# *
# * -------------------------------------------------------------------

import rospy
from naoqi_bridge_msgs.msg import JointAnglesWithSpeed
from std_msgs.msg import String
from time import sleep

# Rospy Node
rospy.init_node("head_movement")

# Subscription as a publisher to the topic /pepper_robot/pose/joint_angles
pub = rospy.Publisher('/pepper_robot/pose/joint_angles', JointAnglesWithSpeed, queue_size=0)
pub_joint = rospy.Publisher('/pepper_pose', String, queue_size=0)
rospy.loginfo("Initialized node")
rospy.loginfo("Created publisher to the /pepper_robot/pose/joint_angles topic")
rospy.loginfo("Created publisher to the /pepper_pose topic")

# Defining message to be published
s = JointAnglesWithSpeed()
s.joint_names = ['HeadPitch', 'HeadYaw']
s.relative = 0
s.speed = 0.2
rospy.loginfo("Movement speed setted to %.1f", s.speed)

rate = rospy.Rate(0.1)
# Defining flags to make different movements
flag = [False, False, False]
setup = False
cnt = 0

while not rospy.is_shutdown():
    sleep (20) # Waiting time of 20 seconds for each movement
    if not setup:
        # This setup allows Pepper to turn in the starting position
        rospy.loginfo("Setup phase ..")
        s.joint_angles = [0.1, 0.0]
        if cnt == 2:
            rospy.loginfo("Setup movements done")
            setup = True
        cnt += 1
        pub.publish(s)
    elif not flag[0]:
        pub_joint.publish(String("Center"))
        # Turn left
        s.joint_angles = [0.1, 1.0]
        flag[0] = True
        rospy.loginfo("Turning in [%.1f - %.1f]", s.joint_angles[0], s.joint_angles[1])
        pub.publish(s)
    elif not flag[1]:
        pub_joint.publish(String("Left"))
        # Turn right
        s.joint_angles = [0.1, -1.0]
        flag[1] = True
        rospy.loginfo("Turning in [%.1f - %.1f]", s.joint_angles[0], s.joint_angles[1])
        pub.publish(s)
    elif not flag[2]:
        pub_joint.publish(String("Right"))
        # Return to the starting position
        s.joint_angles = [0.1, 0.0]
        flag[2] = True
        rospy.loginfo("Turning in [%.1f - %.1f]", s.joint_angles[0], s.joint_angles[1])
        pub.publish(s)
    rate.sleep()
