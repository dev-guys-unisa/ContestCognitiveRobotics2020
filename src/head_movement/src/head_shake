#!/usr/bin/env python
import rospy
from naoqi_bridge_msgs.msg import JointAnglesWithSpeed

# Rospy Node
rospy.init_node("head_movement")
# Subscription as a publisher to the topic /pepper_robot/pose/joint_angles
pub = rospy.Publisher('/pepper_robot/pose/joint_angles', JointAnglesWithSpeed, queue_size=0)
rospy.loginfo("Initialized node and publisher to the /pepper_robot/pose/joint_angles topic")
# Defining message to be published
s = JointAnglesWithSpeed()
s.joint_names = ['HeadPitch', 'HeadYaw']
s.relative = 0
s.speed = 0.2
rospy.loginfo("Movement speed setted to %.1f", s.speed)
rate = rospy.Rate(0.2)
# Defining flags to make different movements
flag = [False, False, False]
setup = False
cnt = 0

while not rospy.is_shutdown():
    if not setup:
        # This setup allows Pepper to turn in the starting position
        rospy.loginfo("Setup phase ..")
        s.joint_angles = [0.1, 0.0]
        if cnt == 2:
            rospy.loginfo("Setup movements done")
            setup = True
        cnt += 1
        pub.publish(s)
    elif not flag[0]:
        # Turn left
        s.joint_angles = [0.1, 1.0]
        flag[0] = True
        rospy.loginfo("Turning in [%.1f - %.1f]", s.joint_angles[0], s.joint_angles[1])
        pub.publish(s)
    elif not flag[1]:
        # Turn right
        s.joint_angles = [0.1, -1.0]
        flag[1] = True
        rospy.loginfo("Turning in [%.1f - %.1f]", s.joint_angles[0], s.joint_angles[1])
        pub.publish(s)
    elif not flag[2]:
        # Return to the starting position
        s.joint_angles = [0.1, 0.0]
        flag[2] = True
        rospy.loginfo("Turning in [%.1f - %.1f]", s.joint_angles[0], s.joint_angles[1])
        pub.publish(s)
    rate.sleep()