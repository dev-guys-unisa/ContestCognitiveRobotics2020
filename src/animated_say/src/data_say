#!/usr/bin/env python
import time
import rospy
from naoqi_driver import NaoqiNode
from std_msgs.msg import String

topic = "/pepper_detective"

class AnimatedSay(NaoqiNode):
    def __init__(self):
        NaoqiNode.__init__(self, 'animated_speech')
        # Subscription to the topic for the detections
        self.msg=""
        self.say_sub = rospy.Subscriber(topic, String, self.callback)
        self.connectNaoQi()
        pass

    def connectNaoQi(self):
        # Speech Proxy attachment
        self.speech = self.get_proxy("ALAnimatedSpeech")

    arrived = 0
    def callback(self, data):
        # Tipical command : "Hello! ^start(animations/Stand/Gestures/Hey_1) Nice to meet you!"
        global arrived
        arrived += 1
        message = "a "
        for s in data.detections:
            message += s.data + ", a "
        self.msg += "In the " + str(data.pose.data) + "position, I have seen " + message + ". "
        self.msg += " ^start(animations/Stand/Gestures/Explain_10)"
        
        if arrived == 3:
            self.say(self.msg)

    def say(self, msg):
        # Sending phrase and bodyLanguage to Pepper
        self.speech.say(self.msg, {"bodyLanguageMode":"contextual"})

if __name__ == "__main__":
    pub = AnimatedSay()
    rospy.spin()